/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void toggleLSBUSB()
    {
        // Override and implement this function in Screen1
    }
    virtual void selectBand()
    {
        // Override and implement this function in Screen1
    }
    virtual void toggleRXTX()
    {
        // Override and implement this function in Screen1
    }
    virtual void setWFBWup()
    {
        // Override and implement this function in Screen1
    }
    virtual void setWFBWdown()
    {
        // Override and implement this function in Screen1
    }
    virtual void changeStepSize()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::Button buttonPTT;
    touchgfx::Button buttonLSBUSB;
    touchgfx::Button buttonToggleBand;
    touchgfx::Image image3;
    touchgfx::GraphWrapAndClear<341> dynamicGraph1;
    touchgfx::GraphElementLine dynamicGraph1Line1;
    touchgfx::PainterRGB888 dynamicGraph1Line1Painter;
    touchgfx::BoxProgress boxProgress1;
    touchgfx::Button buttonUP;
    touchgfx::Button buttonDOWN;
    touchgfx::Button buttonVFO;
    touchgfx::TextAreaWithOneWildcard textAreaStepsize;
    touchgfx::TextAreaWithOneWildcard textAreaVFO;
    touchgfx::TextAreaWithOneWildcard textAreaWFBW;
    touchgfx::TextArea textAreaHB9GZE;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREASTEPSIZE_SIZE = 17;
    touchgfx::Unicode::UnicodeChar textAreaStepsizeBuffer[TEXTAREASTEPSIZE_SIZE];
    static const uint16_t TEXTAREAVFO_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textAreaVFOBuffer[TEXTAREAVFO_SIZE];
    static const uint16_t TEXTAREAWFBW_SIZE = 7;
    touchgfx::Unicode::UnicodeChar textAreaWFBWBuffer[TEXTAREAWFBW_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN1VIEWBASE_HPP
